/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.sevval_bilgin_project_reversi;

import java.awt.Color;
import java.awt.Dimension;
import java.io.IOException;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
//import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author hp
 */
public class SevvalBilginGameSceneFrame extends javax.swing.JFrame {

    /**
     * Creates new form SevvalBilginSÄ±gnInGameSceneFrame
     */
    public SevvalBilginGameSceneFrame() throws NullPointerException {
        initComponents();

        lbl_game_scene_user1.setText(SevvalBilginLogInFrame.user1_new_name);
        lbl_game_scene_user2.setText(SevvalBilginLogInFrame.user2_new_name);
        lbl_game_scene_user1_score.setText(SevvalBilginLogInFrame.entered_users_list[0].getScore() + "");
        lbl_game_scene_user1_score.setText(SevvalBilginLogInFrame.entered_users_list[1].getScore() + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JSeparator();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        pnl_game_scene = new javax.swing.JPanel();
        pnl_root_game_scene = new javax.swing.JPanel();
        lbl_game_scene_user2_score = new javax.swing.JLabel();
        lbl_game_scene_user2 = new javax.swing.JLabel();
        spinner_game_scene = new javax.swing.JSpinner();
        lbl_game_scene_user1_score = new javax.swing.JLabel();
        lbl_game_scene_user1 = new javax.swing.JLabel();
        menubar_game_scene = new javax.swing.JMenuBar();
        menu_game_scene_game = new javax.swing.JMenu();
        menu_game_scene_game_new_game = new javax.swing.JMenuItem();
        menu_game_scene_game_exit = new javax.swing.JMenuItem();
        menu_game_scene_scores = new javax.swing.JMenu();
        menu_item_game_scene_scores_scores = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSplitPane1.setBackground(new java.awt.Color(51, 255, 204));
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setAlignmentX(0.5F);
        jSplitPane1.setAlignmentY(0.5F);
        jSplitPane1.setMinimumSize(new java.awt.Dimension(100, 100));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel1);

        pnl_game_scene.setBackground(new java.awt.Color(0, 0, 0));
        pnl_game_scene.setMinimumSize(new java.awt.Dimension(0, 361));
        pnl_game_scene.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnl_game_sceneMouseMoved(evt);
            }
        });
        pnl_game_scene.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnl_game_sceneMouseEntered(evt);
            }
        });
        jSplitPane1.setBottomComponent(pnl_game_scene);

        pnl_root_game_scene.setBackground(new java.awt.Color(0, 153, 0));
        pnl_root_game_scene.setPreferredSize(new java.awt.Dimension(427, 54));

        lbl_game_scene_user2_score.setBackground(new java.awt.Color(255, 255, 255));
        lbl_game_scene_user2_score.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_game_scene_user2_score.setText("0");

        lbl_game_scene_user2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_game_scene_user2.setText("User 2:");

        spinner_game_scene.setModel(new javax.swing.SpinnerNumberModel(6, 6, 12, 2));

        lbl_game_scene_user1_score.setBackground(new java.awt.Color(255, 255, 255));
        lbl_game_scene_user1_score.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_game_scene_user1_score.setText("0");

        lbl_game_scene_user1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_game_scene_user1.setText("User 1:");

        javax.swing.GroupLayout pnl_root_game_sceneLayout = new javax.swing.GroupLayout(pnl_root_game_scene);
        pnl_root_game_scene.setLayout(pnl_root_game_sceneLayout);
        pnl_root_game_sceneLayout.setHorizontalGroup(
            pnl_root_game_sceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_root_game_sceneLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbl_game_scene_user1)
                .addGap(18, 18, 18)
                .addComponent(lbl_game_scene_user1_score, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188)
                .addComponent(spinner_game_scene, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(lbl_game_scene_user2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_game_scene_user2_score, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        pnl_root_game_sceneLayout.setVerticalGroup(
            pnl_root_game_sceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_root_game_sceneLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnl_root_game_sceneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_game_scene_user1)
                    .addComponent(lbl_game_scene_user1_score)
                    .addComponent(lbl_game_scene_user2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_game_scene_user2_score, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(spinner_game_scene))
                .addGap(11, 11, 11))
        );

        jSplitPane1.setLeftComponent(pnl_root_game_scene);

        menu_game_scene_game.setText("Game");

        menu_game_scene_game_new_game.setText("New Game");
        menu_game_scene_game_new_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_game_scene_game_new_gameActionPerformed(evt);
            }
        });
        menu_game_scene_game.add(menu_game_scene_game_new_game);

        menu_game_scene_game_exit.setText("Exit");
        menu_game_scene_game_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_game_scene_game_exitActionPerformed(evt);
            }
        });
        menu_game_scene_game.add(menu_game_scene_game_exit);

        menubar_game_scene.add(menu_game_scene_game);

        menu_game_scene_scores.setText("Scores");
        menu_game_scene_scores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_game_scene_scoresActionPerformed(evt);
            }
        });

        menu_item_game_scene_scores_scores.setText("Scores");
        menu_item_game_scene_scores_scores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_game_scene_scores_scoresActionPerformed(evt);
            }
        });
        menu_game_scene_scores.add(menu_item_game_scene_scores_scores);

        menubar_game_scene.add(menu_game_scene_scores);

        setJMenuBar(menubar_game_scene);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static int count;
    public static int user1_score;
    public static int user2_score;
    public static int white_buttons = 2;
    public static int black_buttons = 2;
    public static SevvalBilginMyButton[][] buttonMatrix = new SevvalBilginMyButton[144][144];
    private void menu_game_scene_game_new_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_game_scene_game_new_gameActionPerformed
        // TODO add your handling code here:if (SevvalBilginGameSceneFrame.black_buttons + SevvalBilginGameSceneFrame.white_buttons == SevvalBilginGameSceneFrame.count * SevvalBilginGameSceneFrame.count) {

        pnl_game_scene.removeAll();
        lbl_game_scene_user1_score.setText("0");
        lbl_game_scene_user2_score.setText("0");
        count = (int) spinner_game_scene.getValue();
        // taÅlarÄ± dinamik olarak ekleme
        for (int i = 0; i < count; i++) {
            for (int j = 0; j < count; j++) {
                SevvalBilginMyButton button_new = new SevvalBilginMyButton(j, i);
                buttonMatrix[i][j] = button_new;
                button_new.setText("");
                pnl_game_scene.add(button_new);
                button_new.setColor(Color.green, 'g');
                switch (count) {
                    case 6 ->
                        button_new.setPreferredSize(new Dimension(110, 85));
                    case 8 ->
                        button_new.setPreferredSize(new Dimension(85, 65));
                    case 10 ->
                        button_new.setPreferredSize(new Dimension(65, 50));
                    case 12 ->
                        button_new.setPreferredSize(new Dimension(55, 40));
                    default ->
                        throw new AssertionError();
                }//ortadaki taÅlarÄ±n rengini dÃ¼zenleme
                if (i == count / 2 - 1 && j == count / 2 - 1 || i == count / 2 && j == count / 2) {

                    button_new.setColor(Color.WHITE, 'w');
                }
                if (i == count / 2 - 1 && j == count / 2 || i == count / 2 && j == count / 2 - 1) {

                    button_new.setColor(Color.BLACK, 'b');
                }

                pnl_game_scene.repaint();
                button_new.setVisible(true);

                pnl_game_scene.revalidate();

            }
        }
    }//GEN-LAST:event_menu_game_scene_game_new_gameActionPerformed
//    public void setScoreLabels(int num1, int num2) {
//        lbl_game_scene_user1_score.setText(Integer.parseInt(lbl_game_scene_user1_score.getText()) + num1 + "");
//        lbl_game_scene_user2_score.setText(Integer.parseInt(lbl_game_scene_user1_score.getText()) + num2 + "");
//    }
    private void menu_game_scene_game_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_game_scene_game_exitActionPerformed
        // TODO add your handling code here:
        try {
//kullanÄ±cÄ±ya oyundan Ã§Ä±karken skoru kayetmek isteyip istemediÄini sorar
            int option = JOptionPane.showConfirmDialog(this, " You are exitting.Do you want to save your score??", "Question", JOptionPane.YES_NO_CANCEL_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                //kullanÄ±cÄ± kaydetmek isterse skorlarÄ± tabloya kaydeder/gÃ¼nceller
                SevvalBilginScoresTable scores = new SevvalBilginScoresTable();
                String user1_name = lbl_game_scene_user1.getText();
                String user2_name = lbl_game_scene_user2.getText();
                for (SevvalBilginUsers user : SevvalBilginData.userList) {

                    if (user.getName().compareTo(user1_name) == 0) {
                        user.setScoreInfos(user1_name, Integer.parseInt(lbl_game_scene_user1_score.getText()));
                    }
                    if (user.getName().compareTo(user2_name) == 0) {
                        user.setScoreInfos(user2_name, Integer.parseInt(lbl_game_scene_user2_score.getText()));
                    }

                    SevvalBilginData.scoresList.add(user);
                    SevvalBilginData.WriteScoreListToFile();
                    if (user.name.compareToIgnoreCase(user1_name) == 0) {
                        SevvalBilginScoresTable.tbl_scores_model.addRow(user.getScoreInfos().split("&"));

                        SevvalBilginData.UserScoreStatus status = SevvalBilginData.AddUserToScoresList(user1_name, Integer.parseInt(lbl_game_scene_user1_score.getText()));
                        switch (status) {
                            case UserAdded:
                                JOptionPane.showMessageDialog(this, "User 1 Added!!");
                            case UserUpdated:
                                JOptionPane.showMessageDialog(this, "User 1 Updated!!");
                                break;
                            default:
                                throw new AssertionError();
                        }

                    } else if (user.name.compareToIgnoreCase(user2_name) == 0) {
                        SevvalBilginScoresTable.tbl_scores_model.addRow(user.getScoreInfos().split("&"));
                        SevvalBilginData.UserScoreStatus status = SevvalBilginData.AddUserToScoresList(user2_name, Integer.parseInt(lbl_game_scene_user2_score.getText()));
                        switch (status) {
                            case UserAdded:
                                JOptionPane.showMessageDialog(this, "User 2 Added!!");
                            case UserUpdated:
                                JOptionPane.showMessageDialog(this, "User 2 Updated!!");
                                break;
                            default:
                                throw new AssertionError();
                        }
                    }

                }
                this.setVisible(false);

                scores.setVisible(true);
            }
            if (option == JOptionPane.NO_OPTION) {
                System.exit(0);
            }

        } catch (Exception ex) {
            Logger.getLogger(SevvalBilginGameSceneFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menu_game_scene_game_exitActionPerformed

    private void menu_game_scene_scoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_game_scene_scoresActionPerformed


    }//GEN-LAST:event_menu_game_scene_scoresActionPerformed

    private void menu_item_game_scene_scores_scoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_game_scene_scores_scoresActionPerformed
        try {

            int option = JOptionPane.showConfirmDialog(this, " Do you want to save your score??", "Question", JOptionPane.YES_NO_CANCEL_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                SevvalBilginScoresTable scores = new SevvalBilginScoresTable();
                String user1_name = lbl_game_scene_user1.getText();
                String user2_name = lbl_game_scene_user2.getText();
                for (SevvalBilginUsers user : SevvalBilginData.userList) {

                    if (user.getName().compareTo(user1_name) == 0) {
                        user.setScoreInfos(user1_name, Integer.parseInt(lbl_game_scene_user1_score.getText()));
                    }
                    if (user.getName().compareTo(user2_name) == 0) {
                        user.setScoreInfos(user2_name, Integer.parseInt(lbl_game_scene_user2_score.getText()));
                    }

                    SevvalBilginData.scoresList.add(user);
                    SevvalBilginData.WriteScoreListToFile();
                    if (user.name.compareToIgnoreCase(user1_name) == 0) {
                        SevvalBilginScoresTable.tbl_scores_model.addRow(user.getScoreInfos().split("&"));

                        SevvalBilginData.UserScoreStatus status = SevvalBilginData.AddUserToScoresList(user1_name, Integer.parseInt(lbl_game_scene_user1_score.getText()));
                        switch (status) {
                            case UserAdded:
                                JOptionPane.showMessageDialog(this, "User 1 Added!!");
                            case UserUpdated:
                                JOptionPane.showMessageDialog(this, "User 1 Updated!!");
                                break;
                            default:
                                throw new AssertionError();
                        }

                    } else if (user.name.compareToIgnoreCase(user2_name) == 0) {
                        SevvalBilginScoresTable.tbl_scores_model.addRow(user.getScoreInfos().split("&"));
                        SevvalBilginData.UserScoreStatus status = SevvalBilginData.AddUserToScoresList(user2_name, Integer.parseInt(lbl_game_scene_user2_score.getText()));
                        switch (status) {
                            case UserAdded:
                                JOptionPane.showMessageDialog(this, "User 2 Added!!");
                            case UserUpdated:
                                JOptionPane.showMessageDialog(this, "User 2 Updated!!");
                                break;
                            default:
                                throw new AssertionError();
                        }
                    }

                }
                this.setVisible(false);

                scores.setVisible(true);
            }
            if (option == JOptionPane.NO_OPTION) {
                this.setVisible(false);
                SevvalBilginScoresTable scores = new SevvalBilginScoresTable();
                scores.setVisible(true);
            }

        } catch (Exception ex) {
            Logger.getLogger(SevvalBilginGameSceneFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_menu_item_game_scene_scores_scoresActionPerformed

    private void pnl_game_sceneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_game_sceneMouseEntered
        // TODO add your handling code here

    }//GEN-LAST:event_pnl_game_sceneMouseEntered

    private void pnl_game_sceneMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_game_sceneMouseMoved
        lbl_game_scene_user1_score.setText(user1_score + "");
        lbl_game_scene_user2_score.setText(user2_score + "");
        if (SevvalBilginGameSceneFrame.white_buttons + SevvalBilginGameSceneFrame.black_buttons == count * count) {
            int option = JOptionPane.showConfirmDialog(this, " Do you want to save your score??", "Question", JOptionPane.YES_NO_CANCEL_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                try {
                    SevvalBilginScoresTable scores = new SevvalBilginScoresTable();
                    String user1_name = lbl_game_scene_user1.getText();
                    String user2_name = lbl_game_scene_user2.getText();
                    for (SevvalBilginUsers user : SevvalBilginData.userList) {

                        if (user.getName().compareTo(user1_name) == 0) {
                            user.setScoreInfos(user1_name, Integer.parseInt(lbl_game_scene_user1_score.getText()));
                        }
                        if (user.getName().compareTo(user2_name) == 0) {
                            user.setScoreInfos(user2_name, Integer.parseInt(lbl_game_scene_user2_score.getText()));
                        }

                        SevvalBilginData.scoresList.add(user);
                        SevvalBilginData.WriteScoreListToFile();
                        JOptionPane.showMessageDialog(rootPane, "User Added!!");

                        if (user.name.compareToIgnoreCase(user1_name) == 0) {
                            SevvalBilginScoresTable.tbl_scores_model.addRow(user.getScoreInfos().split("&"));
                            try {
                                SevvalBilginData.UserScoreStatus status = SevvalBilginData.AddUserToScoresList(user1_name, Integer.parseInt(lbl_game_scene_user1_score.getText()));
                            } catch (Exception ex) {
                                Logger.getLogger(SevvalBilginGameSceneFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        } else if (user.name.compareToIgnoreCase(user2_name) == 0) {
                            SevvalBilginScoresTable.tbl_scores_model.addRow(user.getScoreInfos().split("&"));

                        }

                        scores.setVisible(true);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(SevvalBilginGameSceneFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_pnl_game_sceneMouseMoved

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lbl_game_scene_user1;
    private javax.swing.JLabel lbl_game_scene_user1_score;
    private javax.swing.JLabel lbl_game_scene_user2;
    private javax.swing.JLabel lbl_game_scene_user2_score;
    private javax.swing.JMenu menu_game_scene_game;
    private javax.swing.JMenuItem menu_game_scene_game_exit;
    private javax.swing.JMenuItem menu_game_scene_game_new_game;
    private javax.swing.JMenu menu_game_scene_scores;
    private javax.swing.JMenuItem menu_item_game_scene_scores_scores;
    private javax.swing.JMenuBar menubar_game_scene;
    private javax.swing.JPanel pnl_game_scene;
    private javax.swing.JPanel pnl_root_game_scene;
    private javax.swing.JSpinner spinner_game_scene;
    // End of variables declaration//GEN-END:variables
}
